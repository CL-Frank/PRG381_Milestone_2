/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.bcwellness.view;

import com.bcwellness.dao.FeedbackDAO;
import com.bcwellness.model.Feedback;
import com.bcwellness.controller.FeedbackController;
import com.bcwellness.exception.ExceptionHandler;
import com.bcwellness.exception.ExceptionHandler.DatabaseException;
import com.bcwellness.exception.ExceptionHandler.ValidationException;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.*;
import java.sql.Connection;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author vunen
 */
public class FeedbackManagementPanel extends javax.swing.JPanel {
    
    private FeedbackController controller;
    private DefaultTableModel tableModel;

    /**
     * Creates new form NewJPanel
     */
    public FeedbackManagementPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSearch = new javax.swing.JButton();
        btnViewAll = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        btnSubmit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtComment = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtStudentNumber = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtStudentName = new javax.swing.JTextPane();
        txtRating = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtSearch = new javax.swing.JTextPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnStats = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 153, 255));

        btnSearch.setText("Search");
        btnSearch.setBackground(new java.awt.Color(0, 255, 255));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnViewAll.setText("View All");
        btnViewAll.setBackground(new java.awt.Color(0, 255, 255));

        btnEdit.setText("Edit");
        btnEdit.setBackground(new java.awt.Color(0, 255, 255));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        jButton4.setText("Delete");
        jButton4.setBackground(new java.awt.Color(0, 255, 255));
        jButton4.setForeground(new java.awt.Color(255, 51, 51));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        btnSubmit.setText("Submit");
        btnSubmit.setBackground(new java.awt.Color(0, 255, 255));
        btnSubmit.setForeground(new java.awt.Color(51, 153, 0));
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        jLabel1.setText("Feedback");
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        jLabel2.setText("Student Number");

        jLabel3.setText("Student Name");

        jLabel4.setText("Rating");

        jLabel5.setText("Comment");

        txtComment.setColumns(20);
        txtComment.setRows(5);
        jScrollPane1.setViewportView(txtComment);

        jScrollPane3.setViewportView(txtStudentNumber);

        jScrollPane4.setViewportView(txtStudentName);

        txtRating.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));

        jLabel7.setText("Search by Student Number");

        jScrollPane5.setViewportView(txtSearch);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Student Number", "Student Name", "Rating", "Comment"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jTable1);

        btnStats.setBackground(new java.awt.Color(0, 255, 255));
        btnStats.setText("Stats");
        btnStats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStatsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(36, 36, 36)
                                        .addComponent(btnViewAll, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(112, 112, 112)
                                        .addComponent(btnStats, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(131, 131, 131)
                                        .addComponent(btnEdit)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                                .addComponent(jButton4))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                                    .addComponent(jScrollPane4)
                                    .addComponent(txtRating))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(182, 182, 182))
                                    .addComponent(jScrollPane1)))
                            .addComponent(jScrollPane6))))
                .addGap(54, 54, 54))
            .addGroup(layout.createSequentialGroup()
                .addGap(341, 341, 341)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtRating, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnEdit)
                                .addComponent(jButton4)
                                .addComponent(jLabel7)))
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSubmit)
                            .addComponent(btnStats)
                            .addComponent(btnViewAll)
                            .addComponent(btnSearch))
                        .addGap(21, 21, 21))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow >= 0) {
            int feedbackId = (int) tableModel.getValueAt(selectedRow, 0);
            try {
                int confirm = JOptionPane.showConfirmDialog(this,
                    "Are you sure you want to delete this feedback?",
                    "Confirm Deletion",
                    JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    boolean success = controller.deleteFeedback(feedbackId);
                    if (success) {
                        JOptionPane.showMessageDialog(this, "Feedback deleted.");
                        loadFeedback();
                    } else {
                        JOptionPane.showMessageDialog(this, "Failed to delete feedback.");
                    }
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    
    private void loadFeedback() {
        try {
            tableModel.setRowCount(0);
            List<Feedback> feedbackList = controller.getAllFeedback();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm");
            for (Feedback f : feedbackList) {
                tableModel.addRow(new Object[]{
                    f.getFeedbackId(),
                    f.getStudentNumber(),
                    f.getStudentName(),
                    f.getRating(),
                    f.getComments(),
                    f.getSubmittedAt().format(formatter)
                });
            }
        } catch (Exception e) {
            ExceptionHandler.handleDatabaseError("fetching feedback", e);
        }
    }
    
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String studentNumber = JOptionPane.showInputDialog(this, "Enter Student Number to Search:");
        if (studentNumber != null && !studentNumber.trim().isEmpty()) {
            try {
                tableModel.setRowCount(0);
                List<Feedback> feedbackList = controller.searchFeedbackByStudentNumber(studentNumber.trim());
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm");
                for (Feedback f : feedbackList) {
                    tableModel.addRow(new Object[]{
                        f.getFeedbackId(),
                        f.getStudentNumber(),
                        f.getStudentName(),
                        f.getRating(),
                        f.getComments(),
                        f.getSubmittedAt().format(formatter)
                    });
                }
            } catch (Exception e) {
                ExceptionHandler.handleDatabaseError("searching feedback", e);
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        try {
            String studentNumber = txtStudentNumber.getText().trim();
            String studentName = txtStudentName.getText().trim();
            int rating = (int) txtRating.getValue();
            String comment = txtComment.getText().trim();

            Feedback feedback = new Feedback(studentNumber, studentName, rating, comment);
            boolean success = controller.addFeedback(feedback);

            if (success) {
                JOptionPane.showMessageDialog(this, "Feedback submitted successfully!");
                loadFeedback();
            } else {
                JOptionPane.showMessageDialog(this, "Failed to submit feedback.");
            }
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Rating must be a number between 1 and 5.");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow >= 0) {
            try {
                int feedbackId = (int) tableModel.getValueAt(selectedRow, 0);
                String newName = JOptionPane.showInputDialog(this, "Edit Name:", tableModel.getValueAt(selectedRow, 2));
                String newRatingStr = JOptionPane.showInputDialog(this, "Edit Rating (1-5):", tableModel.getValueAt(selectedRow, 3));
                String newComments = JOptionPane.showInputDialog(this, "Edit Comments:", tableModel.getValueAt(selectedRow, 4));

                if (newName != null && newRatingStr != null && newComments != null) {
                    int newRating = Integer.parseInt(newRatingStr);
                    controller.updateFeedback(feedbackId, newName, newRating, newComments);
                    ExceptionHandler.showSuccessMessage("Feedback updated.");
                    loadFeedback();
                }
            } catch (NumberFormatException e) {
                ExceptionHandler.handleValidationError("Rating must be a number between 1 and 5.");
            } catch (Exception e) {
                ExceptionHandler.handleDatabaseError("editing feedback", e);
            }
        } else {
            ExceptionHandler.handleValidationError("Please select a feedback entry to edit.");
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnStatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStatsActionPerformed
        // TODO add your handling code here:
        try {
            FeedbackDAO.FeedbackStats stats = controller.getFeedbackStats();
            String message = String.format(
                "Total Feedback: %d\nAverage Rating: %.2f\nHighest Rating: %d\nLowest Rating: %d",
                stats.getTotalFeedback(),
                stats.getAverageRating(),
                stats.getHighestRating(),
                stats.getLowestRating()
            );
            JOptionPane.showMessageDialog(this, message, "Feedback Stats", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            ExceptionHandler.handleDatabaseError("loading statistics", e);
        }
    }//GEN-LAST:event_btnStatsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnStats;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnViewAll;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea txtComment;
    private javax.swing.JSpinner txtRating;
    private javax.swing.JTextPane txtSearch;
    private javax.swing.JTextPane txtStudentName;
    private javax.swing.JTextPane txtStudentNumber;
    // End of variables declaration//GEN-END:variables
}
